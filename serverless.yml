service: serverless-clean-architecture-nodejs

frameworkVersion: '2'

provider:
  name: aws
  region: eu-west-3
  runtime: nodejs12.x
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: 
        - "arn:aws:dynamodb:eu-west-3:*:table/todos"
        - "arn:aws:dynamodb:eu-west-3:*:table/todos/index/*"

plugins:
  - serverless-webpack

layers:
  nodeModules:
    path: layers/node_modules

package:
  individually: true
  # exclude:
  #   - 'node_modules/**'
  #   - 'test/**'
  #   - 'src/**'
  #   - 'package.json'
  #   - 'package-lock.json'
  #   - 'deploy.sh'
  #   - 'README.md'
  # include:
  #   - src/frameworks/dependency_injection/container.js
  #   - src/application/errors/**
  #   - src/adapters/requests/**

functions:
  createTodo:
    handler: src/adapters/lambdas/todos/createTodo/createTodo.handler
    events:
      - http:
          path: todos
          method: post
          cors: true
    layers:
      - { Ref: NodeModulesLambdaLayer }
    package:
      individually: true
      # package:
    #   individually: true
    #   include:
    #     - src/adapters/lambdas/todos/createTodo/**
    #     - src/application/use_cases/todos/addTodo/**        
    #     - src/frameworks/persistence/dynamoDB/todosRepository.js        
    #     - src/entities/todo.js

  getTodos:
    handler: src/adapters/lambdas/todos/getTodos/getTodos.handler
    events:
      - http:
          path: todos
          method: get
          cors: true
    layers:
      - { Ref: NodeModulesLambdaLayer }
    package:
      individually: true
    # package:
    #   individually: true
    #   include:
    #     - src/adapters/lambdas/todos/getTodos/**
    #     - src/application/use_cases/todos/getTodos/**  
    #     - src/frameworks/persistence/dynamoDB/todosRepository.js        
    #     - src/entities/todo.js

resources:
  Resources:
    TodosDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          -
            AttributeName: id
            AttributeType: S
          -
            AttributeName: name
            AttributeType: S      
        KeySchema:
          -
            AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: todos
        GlobalSecondaryIndexes:
          - 
            IndexName: "todos_name_gsi"
            KeySchema: 
              - 
                AttributeName: "name"
                KeyType: "HASH"           
            Projection: 
              NonKeyAttributes: 
                - "id"
                - "name"   
              ProjectionType: "INCLUDE"
            ProvisionedThroughput: 
              ReadCapacityUnits: "1"
              WriteCapacityUnits: "1"

